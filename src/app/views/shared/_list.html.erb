<%
# this file generates the assets and folders list associated to our position in the folders'tree
# this is not the core of the app and front office and back office are mixed up here 
# this is therefore a very bad practice but provided fun for me :-)
# initialization of @assets, @folders and @shared_folders_by_others as empty hashes {}
@assets={}
@folders={}
@shared_folders_by_others={}

# all the ids of the folders owned by the user
userfolderids=current_user.folders.ids

if @current_folder
  #04/03/2019 - speeding up things - adding a jointure on the users table and a special select 
  #@assets = @current_folder.assets.order("uploaded_file_file_name desc")
  puts("join on assets !!!")
  @assets=@current_folder.assets.joins(:user).select("assets.*, users.email as owner_mel").order("uploaded_file_file_name desc")
  @folders = @current_folder.children.joins(:user).order("name asc").select("users.email as owner_mel, folders.*")
  # at this stage, we can check if the status folder by checking its user_id and its parent_id
  @folders.each do |f|
    if f.user_id != current_user.id 
      if userfolderids.include?(f.parent_id)
        f.status='swarmed_to_the_current_user'
      else
        f.status='shared_to_the_current_user'
      end
    else
      if userfolderids.include?(f.parent_id)
        f.status='owned'
      else
        f.status='swarmed'
      end
    end
  end
else
  # is_admin? does not use a SQL request
  if current_user.is_admin?
    @folders=Folder.roots.joins(:user).select("users.email as owner_mel, folders.*")
    @folders.each do |f|
      if f.user_id != current_user.id
        f.status='shared_to_the_current_user'
      else
        f.status='owned'
      end
    end   
  else
    @folders=current_user.folders.roots.joins(:user).select("users.email as owner_mel, folders.*").order("name asc")
    @folders.each do |f|
      f.status='owned'
    end
    # speeding up things : no folder implies no root folder & no root folder implies no folder
    if @folders.length>0
    #if current_user.folders.all.length>0
      # we search for all folders owned by the user and swarmed in other users directories 
      @swarmed_folders=Folder.joins(:user).where("user_id = ? and parent_id not in (?)",current_user.id,userfolderids).select("users.email as owner_mel, folders.*").order("name asc")
      @swarmed_folders.each do |sf|
        sf.status='swarmed'
      end
      @folders= @swarmed_folders + @folders
    end
  end
  #04/03/2019 - speeding up things - adding a jointure on the users table and a special select 
  puts("join on assets !!!")
  @assets=current_user.assets.joins(:user).select("assets.*, users.email as owner_mel").where("folder_id is NULL").order("uploaded_file_file_name desc")
  #04/03/2019 - speeding up things
  #@shared_folders_by_others=current_user.shared_folders_by_others.order(name: :ASC)
  @shared_folders_by_others=SharedFolder.joins(:user).joins(:folder).select("folders.*, users.email as owner_mel").where(share_user_id: current_user.id).order("folders.name ASC")
end
%>

<%# for debugging %>
<%#= values %>
<%# if @folders %>
<%# @folders.as_json(methods: "status").each do |r| %>
<%#= "#{r}<br>".html_safe %>
<%# end %>
<%# end %>

<% #04/03/2019 - speeding up things - favour the use of length over size or count which consume SQL queries %>
<% # if @assets.length > 0 or @folders.length > 0 or (current_user.has_shared_folders_from_others? && !@current_folder) %>
<%  if @assets.length > 0 or @folders.length > 0 or (@shared_folders_by_others.length > 0 && !@current_folder) %>
<div class="table-responsive-sm">
<table class="table table-hover table-sm">
    <thead>
        <tr>
	      <th></th>
          <th><%= t('sb.name') %></th>
          <th><%= t('sb.last_update') %></th>
          <th><%= t('sb.length') %></th>
        </tr>
    </thead>
    <tbody>
    <% # we are in the user's root directory - if folders have been shared to the user, we have to display them, unless the user is an admin %>
    <% if !@current_folder && !current_user.is_admin? %>
      <% @shared_folders_by_others.each do |f| %>
        <% #04/03/2019 - speeding up things %>
        <% #prenom_nom=User.find_by_id(f.user_id).email[0..User.find_by_id(f.user_id).email.index('@')-1] %>
        <% prenom_nom=f.owner_mel.split('@')[0] %>
        <tr>
          <th>
            <div class="d-flex align-items-center flex-row-reverse bd-highlight mb-3">
              <div class="p-1">[<%= prenom_nom %>]</div>
              <div class="p-1"></div>
            </div>
          </th>
          <th><div class='folder_owned_by_other'><%= link_to f.name, folder_path(f), class: 'btn btn-link' %></div></th>
          <th><%= f.updated_at %></th>
          <th></th>
        </tr>
      <% end %>
    <% end %>
<%
  # we have displayed all folders shared to the user
  # we loop on the folders
  # 21/03/2019 - using the new metadatas
  @folders.each do |f|
    meta =f.get_meta
    puts ("on folder #{f.name} shares are #{meta['shares']} and length is #{meta['shares'].length}")
    puts ("on folder #{f.name} satis are #{meta['satis']} and length is #{meta['satis'].length}")
    puts ("*****************************************")
    if meta["shares"].length > 0 && meta["satis"].length == 0
    #if f.shared? && !f.has_satisfaction_answer?
      showshares = " #{link_to t('sb.see_shares'), shared_folder_path(f), class: 'btn btn-outline-warning btn-sm'}".html_safe
    elsif meta["satis"].length > 0
    #elsif f.has_satisfaction_answer?
      showshares = " #{link_to t('sb.see_answers'), shared_folder_path(f), class: 'btn btn-outline-warning btn-sm'}".html_safe
    end
    # owner case
    # speeding up things 
    if f.user_id == current_user.id
    #if current_user.has_ownership?(f)
        delete_zone = "#{link_to t('sb.delete'), folder_path(f), method: :delete, data: {confirm: t('sb.are_yu_sure')}, class: 'btn btn-outline-danger btn-sm'}"
        delete_zone = "#{delete_zone}".html_safe
        newshare_zone = "#{link_to t('sb.share'), new_share_on_folder_path(f), class: 'btn btn-outline-primary btn-sm'}".html_safe
        manage_zone = "#{link_to t('sb.manage'), edit_folder_path(f), class: 'btn btn-outline-success btn-sm'}".html_safe
        manage_zone_modal= "#{link_to t('sb.manage'), edit_folder_path(f),  {:remote => true, 'data-toggle' =>  'modal', 'data-target' => '#modalfolderwin', class: 'btn btn-outline-success btn-sm'} }".html_safe
     
        #if f.is_swarmed?
        # current_user is the folder owner - so we check if he has eventually swarmed the folder to another user
        if f.status == 'swarmed'
          start = "<div class='folder_swarmed'>"
        # 05/03/2019 - remove the elsif but it could be interesting
        #elsif f.has_sub_swarmed?
        # start = "<div class='folder_having_sub_swarmed'>"
        else 
          start = "<div class='folder'>" 
        end
        folderbutton = "#{link_to f.name, folder_path(f), class: 'btn btn-link'}".html_safe
        shares_zone = showshares
        close = "</div>".html_safe
        updatefield = "#{f.updated_at}".html_safe
    #elsif current_user.has_shared_access?(f)
    elsif f.status != "owned"
      #puts("all shared access tests on folder finished")
      prenom_nom=f.owner_mel.split('@')[0]
      #prenom_nom=User.find_by_id(f.user_id).email[0..User.find_by_id(f.user_id).email.index('@')-1]
      ownerinfo = "[#{prenom_nom}]".html_safe
      #if f.is_swarmed_to_user?(current_user)
      if f.status=="swarmed_to_the_current_user"
        start = "<div class='folder_swarmed_by_other'>"
      # 05/03/2019 - remove the elsif but it could be interesting
      #elsif f.has_sub_swarmed_to_user?(current_user)
      # start = "<div class='folder_owned_by_other_having_sub_swarmed'>"
      else
        start = "<div class='folder_owned_by_other'>"
      end
      folderbutton = "#{link_to f.name, folder_path(f), class: 'btn btn-link'}".html_safe
      #if f.is_swarmed_to_user?(current_user) || current_user.is_admin?
      if f.status=="swarmed_to_the_current_user" || current_user.is_admin?
        shares_zone = showshares
      end
      close = "</div>".html_safe
      updatefield = "#{f.updated_at}".html_safe
    end
    start = start.html_safe
%>
        <tr>
          <th>
            <div class="d-flex align-items-center flex-row-reverse bd-highlight mb-3">
              <div class="p-1"><%= ownerinfo %></div>
              <div class="p-1">
                <%= shares_zone %>&nbsp;
                <%= delete_zone %>&nbsp;
                <%= newshare_zone %>&nbsp;
                <%#= manage_zone %>
                <%= manage_zone_modal %>
              </div>
            </div>
          </th>
          <th>
            <%= start %>
            <%= folderbutton %>
            <%= close %>
          </th>
          <th><%= updatefield %></th>
          <th></th>
        </tr>          
   
<%
  # end of the folders'loop
  end
  # we loop on the assets
  @assets.each do |f|
    fileclose = "</div>".html_safe
    # speeding up things - has_asset_ownership is consuming a SQL request
    #if current_user.has_asset_ownership?(f)
    if f.user_id == current_user.id
      deletefile_zone = "#{link_to t('sb.delete'), asset_path(f), method: :delete, data: {confirm: t('sb.are_yu_sure') }, class: 'btn btn-outline-danger btn-sm'}".html_safe
      filestart = "<div class='file'>".html_safe
    else
      # speeding up things - 04/03/2019
      prenom_nom= f.owner_mel.split('@')[0]
      #prenom_nom=User.find_by_id(f.user_id).email[0..User.find_by_id(f.user_id).email.index('@')-1]
      fileowner = "[#{prenom_nom}]".html_safe
      filestart = "<div class='file_shared'>".html_safe
    end
%>
        <tr>
          <th>
            <div class="d-flex align-items-center flex-row-reverse bd-highlight mb-3">
              <div class="p-1"><%= fileowner %></div>
              <div class="p-1">
                  <%= deletefile_zone %>    
              </div>
            </div>
          </th>
          <th>
            <%= filestart %>
            <%= link_to f.uploaded_file_file_name, download_url(f), class: 'btn btn-link' %>
            <%= fileclose %>
          </th>
          <th><%= f.uploaded_file_updated_at %></th>
          <th><%= number_to_human_size(f.uploaded_file_file_size, :precision => 2) %></th>
        </tr>
  <% # end of the assets'loop %>
  <% end %>
    </tbody>
</table>
</div>
<% end %>